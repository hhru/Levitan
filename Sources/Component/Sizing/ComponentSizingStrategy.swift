import Foundation

/// Стратегия определения размера компонента по определенной оси.
///
/// Используется в Lazy-контейнере (например, коллекции)
/// или при встраивании UIKit-компонента в SwiftUI-представление.
///
/// - SeeAlso: ``ComponentSizing``
/// - SeeAlso: ``Component``
public enum ComponentSizingStrategy: Equatable {

    /// Компонент имеет фиксированный размер.
    ///
    /// Фактически означает, что у компонента будет констрейнт на размер с заданным значением,
    /// а его собственный размер будет игнорироваться.
    ///
    /// Чтобы избежать конфликта констрейнтов, не следует "замыкать" их в UIKit-представлении по соответствующей оси,
    /// оставив возможность незначительно расширяться или сжиматься.
    ///
    /// - Parameter size: Фиксированный размер компонента.
    case fixed(_ size: CGFloat)

    /// Компонент стремится сохранить свой собственный размер.
    ///
    /// Фактически означает, что компонент будет иметь обязательный приоритет для сопротивления к растяжению
    /// и соответствующий приоритет для сопротивления к сжатию в зависимости от флага `bounded`.
    ///
    /// Чтобы система смогла определить собственный размер компонента,
    /// рекомендуется "замыкать" констрейнты в UIKit-представлении по соответствующей оси
    /// или возвращать определенное значение размера в свойстве `intrinsicContentSize`.
    ///
    /// - Parameter bounded: Определяет, может ли компонент превышать размеры контейнера.
    case hug(bounded: Bool)

    /// Компонент занимает всю область, предоставленную контейнером.
    ///
    /// Фактически означает, что у компонента нет собственного размера и следовательно констрейнта на размер.
    case fill
}
